1、什么是设计模式
（1）静态方法和属性的经典使用
（2）设计模式是在大量的实践中总结和理论化之后优选的代码结构、编程风格、以及解决问题的思考方式。设计
模式就像是经典的棋谱，不同的棋局，我们用不同的棋谱，免去我们自己再思考和摸索。

2、什么是单例模式
单例 （单个的实例）
（1）所谓类的单例设计模式，就是采取一定的方法保证在整个的软件系统中，对某个类只能
存在一个对象实例，并且该类只提供一个取得其对象实例的方法。
（2）单例模式有两种方法：1）饿汉式 2）懒汉式

（1）饿汉式
步骤如下：
①构造器私有化===》防止用户直接去new
②类的内部创建对象
③向外暴露一个静态的公共方法。getInstance
④代码实现 (Single01)

（2）懒汉式
步骤如下：
①仍然构造器私有化
②定义一个static静态属性对象
③提供一个public的static，可以返回懒汉对象
④代码实现（Single02）


饿汉式VS懒汉式
(1)二者最主要的区别在于创建对象的时机不同：饿汉式是在类加载就创建了对象实例，而懒汉式是
在使用时才创建
(2)饿汉式不存在线程安全问题，懒汉式存在线程安全问题（后面在学了线程后，在进行完善）
(3)饿汉式存在浪费资源的可能。因为如果程序员一个对象实例都没有使用，那么饿汉式创建的对象就
浪费了，懒汉式是使用时才创建，就不存在这个问题。
(4)在我们javaSe标准类中，java.lang.Runtime就是经典的单例模式。




