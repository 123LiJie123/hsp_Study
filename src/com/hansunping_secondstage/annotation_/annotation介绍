1、注解的理解
1）注解也被称为元数据，用于修饰解释包、类方法、属性、构造器、局部变量等数据信息。
2）和注释一样，注解不影响程序逻辑，但注解可以被编译或运行，相当于嵌入在代码中的补充信息。
3）在JavaSE中，注解的使用目的比较简单，例如标记过时的功能，忽略警告等。在JavaEE中注解占据了更
重要的角色，例如用来配置应用程序的任何切面，代替javaEE旧版中遗留的繁冗代码和XML配置等。





3、基本的Annotation介绍
使用Annotation时要在其前面增加@符号，并把该Annotation当成一个修饰符使用。用于修饰它支持的程序元素
三个基本的Annotation:
1)@Override：限定某个方法，是重写父类方法，该注解只能用于方法（Override.java）
2）@Deprecated:用于表示某个程序元素（类，方法等）已过时(Deprecated_.java)
3）@SuppressWarnings:抑制编译器警告（SuppressWarnings_.java）


>Override使用说明
1.@Override表示指定重写父类的方法（从编译层面验证)，如果父类没有fly方法，则会报错
2.如果不写@Override 注解,而父类仍有public void fly(){}，仍然构成重写
3.@Override只能修饰方法，不能修饰其它类，包，属性等等
4.查看@Override注解源码为@Target(ElementType.METHOD),说明只能修饰方法
5.@Target是修饰注解的注解,称为元注解




