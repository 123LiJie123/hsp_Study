一、枚举类【枚：一个一个 举： 例 举，即把具体的对象一个一个的列举出来的类】
（1）枚举对应英文（enumeration）
（2）枚举是一组常量的集合。
（3）可以这里理解：枚举属于一种特殊的类，里面只包含一组有限的特定的对象。

二、枚举的二种实现方式
（1）自定义类实现枚举
①将构造器私有化，目的防止 直接new
②可以提供get方法但去掉SetXxx方法，防止属性被修改，
③在【类】的内部，直接创建固定的一组对象，对枚举对象/属性使用final +  static共同修饰，实现底层优化。
④对外暴露对象通过【public】修饰。
（2）使用enum关键字实现枚举
① 使用关键字enum替代class
②将public static final Season SPRING = new Season("春天","温暖")直接使用SPRING("春天","温暖");替代
SPRING("春天","温暖")解读-----常量名(实参列表)
③如果有多个常量（对象），使用“,”间隔即可。
如：SPRING("春天","温暖"),WINTER("冬天","寒冷"),AUTUMN("秋天","凉爽"),SUMMER("夏天","炎热");
④如果使用enum来实现枚举，要求将定义常量对象，写在最前面。


三、enum关键字实现枚举注意事项
1、当我们使用enum关键字开发一个枚举类时，默认会继承Enum类
2、传统的public static final Season2 SPRING = new Season("春天","温暖");简化成SPRING("春天","温暖")，这里必须知道，它调用的是哪个构造器（用Javap class文件即可证明）
3、如果使用无参构造器 创建枚举对象， 则实参列表和小括号都可以省略
4、当有多个枚举对象时，使用“，”间隔，最后有一个分号结尾
5、枚举对象必须放在枚举类的行首。
6、如果创建对象时调用的是无参构造器可以直接省略括号。比如 SPRING()---->SPRING


四、enum常用方法说明
说明：使用关键字enum时，会隐式继承Enum类，这样我们就可以使用Enum类相关的方法.
1.toString:Enum类已经重写过了,返回的是当前对象名,子类可以重写该方法,用于返回对象的属性信息
2.name:返回当前对象名(常量名),子类中不能重写
3.ordinal:返回当前对象的位置号,默认从0开始
4.valuses:返回当前 枚举类中所有的常量
5.valueOf:将字符串转换成枚举对象,要求字符串必须为已有的常量名,否则报异常!
6.compareTo:比较两个枚举常量,比较的就是位置号!

五、enum实现接口
1、使用enum关键字后，就不能再继承其他类了，因为enum会隐式继承Enum，而Java是单继承机制。
2、枚举类和普通类一样，可以实现接口，如下形式。
enum 类名 implements 接口1，接口2{}
