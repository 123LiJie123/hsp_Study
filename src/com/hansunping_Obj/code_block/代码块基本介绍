1、基本介绍
 代码化块又称为初始化块，属于类中的成员【即 是类的一部分】，类似于方法，将逻辑语句
 封装在方法体中，通过{}包围起来。
 但和方法不同，没有方法名，没有返回，没有参数，只有方法体，而且不用通过对象或类显式
 调用，而是加载类时，或创建对象时隐式调用。

2、基本语法
【修饰符】{
代码
};
说明注意：
1）修饰符 可选，要写的话，也只能写static
2）代码块分为两类，使用static修饰的叫静态代码块，没有static修饰的，叫普通代码块/非静态代码块。
3）逻辑语句可以为任何逻辑语句（输入、输出、方法调用、循环、判断等）
4）;号可以写上，也可以省略。


3、代码块的好处和案例演示（Block01.java）
（1）相当于另外一种形式的构造器（对构造器的补充机制），可以做初始化的操作。
（2）如果多个构造器有重复的语句，可以抽取到初始化块中，提高代码的重用性

4、代码块使用注意事项和细节讨论（CodeBlockDetail.java）
（1）static代码块也叫静态代码块，作用就是对类进行初始化，而且它随着类的加载而执行，并且只会执行一次，
如果是普通代码块，每创建一个对象，就执行。
（2）类什么时候被加载
    ①创建对象实例时（new）
    ②创建子类对象实例，父类也会被加载
    ③使用类的静态成员时（静态属性，静态方法）
（3）普通的代码块，在创建对象实例时，会被隐式的调用。
    被创建一次，就会调用一次
    如果只是使用类的静态成员时，普通代码块并不会执行。
（4）创建一个对象时，在一个类 调用顺序是：
    ①调用静态代码块和静态属性初始化（注意：静态代码块和静态属性初始化调用的优先级一样，如果有多个
    静态代码块和多个静态变量初始化，则按他们定义的顺序调用）
    ②调用普通代码块和普通属性的初始化（注意：普通代码块和普通属性初始化调用的优先级一样，如果有多个普通代码块
    和多个普通属性初始化，则按定义顺序调用）
    ③调用构造方法（CodeBlockDetail02.java）
 (5)构造方法（构造器）的最前面其实隐含了super()和调用普通代码块，新写一个类演示，静态相关的代码块，
 属性初始化，在类加载时，就执行完毕，因此是优先于构造器和普通代码块执行的。

 （6）创建一个子类时（继承关系），他们的静态代码块，静态属性初始化，普通代码块，普通属性初始化，构造方法的调用顺序如下：
    ①父类的静态代码块和静态属性（优先级一样，按定顺序执行）
    ②子类的静态代码块和静态属性（优先级一样，按定义顺序执行）
    ③父类的普通代码块和普通属性初始化（优先级一样，按定义顺序执行）
    ④父类的构造方法
    ⑤子类的普通代码块和普通属性初始化（优先级一样，按定义顺序执行）
    ⑥子类的构造方法//面试题
    A extends B 类演示（CodeBlockDetail04.java）
    （7）静态代码块只能直接调用静态成员（静态属性和静态方法），普通代码块可以调用任意成员。

