
1、接口基本介绍
    接口就是给出一些没有实现的方法，封装到一起，到某个类要使用的时候，再根据具体情况
  把这些方法写出来。
  （1）在JDK7.0前，接口里所有的方法都没有方法体。
  （2）JDK8.0后接口可以有静态方法，默认方法，也就是说接口中可以有方法的具体实现。

2、什么时候使用接口
    举例：
    （1）说现在要制造战斗机，武装直升机。专家只需把飞机需要的功能/规格定下来即可，然后
 让别的人具体实现就可。
    （2）说现在有一个项目经理，管理三个程序员，功能开发一个软件，为了控制和管理软件，项目经理可以
    定义一些接口，然后由程序员具体实现。
        实际要求：3个程序员，编写三个类，分别完成对Mysql,Oracle,DB2数据库的连接


3、注意事项和细节
    （1）接口不能被实例化
    （2）接口中所有的方法是public方法(只可以用public和default来修饰，且default修饰的还需要写出方法体)，接口中抽象方法，可以不用abstract修饰
    （3）一个普通类实现接口，就必须将该接口的所有方法都实现。
    （4）抽象类实现接口，可以不用实现接口的方法。
    （5）接口的【静态方法】直接通过接口名调用，而不能是实现类的对象,但接口的属性可以通过接口的实现类的对象调用。
    （6）一个类同时可以实现多个接口
    （7）接口中的属性只能是final的，而且是public static final修饰符。
    比如: int a = 1;实际上是public static final int a = 1;(必须初始化)
    （8）接口中属性的访问形式：接口.属性名
    （9）一个接口不能继承其它的类，但可以继承多个别的接口
    （10）接口的修饰符 只能是public和默认，这点和类的修饰符是一样的。

 4、 实现接口VS继承类（ExtendsVsInterface.java）
   （1）实现接口和继承类到底有什么区别？
   当子类继承了父类就自动的拥有父类的功能，
   如果子类需要扩展功能，可以通过实现接口的方式来扩展。
   可以理解实现接口是对java单继承机制的一种补充。


   5、接口的多态特性
   （1）多态参数
   接口引用可以指向实现了接口类的对象

   （2）多态数组



   （3）接口存在多态传递现象。  InterfacePolyPass.java

